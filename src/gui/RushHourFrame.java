package gui;

import exceptions.RushHourException;
import java.awt.Point;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import rushhour.RushHourVehicle;

/**
 * The class that contains the Rush Hour game frame for a stand-alone
 * application.
 *
 * @author Alex Laird
 * @file RushHourFrame.java
 * @version 0.1
 */
public class RushHourFrame extends JFrame
{
    /** The panel that is added to the frame of the game board.*/
    RushHourPanel framePanel;
    /** The current directory the Rush Hour application is running from.*/
    private final String CURRENT_DIRECTORY = System.getProperty("user.dir");
    /** The directory for saved game files.*/
    private final File SAVE_DIRECTORY = new File(CURRENT_DIRECTORY + "/Saves");
    /** True if the board has just been reset.  Used when loading a game.*/
    protected boolean isReset;

    /**
     * Constructs the frame for the stand-alone application.
     */
    public RushHourFrame()
    {
        framePanel = new RushHourPanel(this);
        add(framePanel);
        setLocation(50, 50);
        initComponents();
        helpDialog.pack();
        aboutDialog.pack();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents()
   {

      helpDialog = new javax.swing.JDialog();
      titleLabel = new javax.swing.JLabel();
      closeHelpButton = new javax.swing.JButton();
      subTitleLabel = new javax.swing.JLabel();
      helpDialogSeparator = new javax.swing.JSeparator();
      helpScrollingPanel = new javax.swing.JScrollPane();
      helpScrollPanel = new javax.swing.JPanel();
      label42 = new javax.swing.JLabel();
      label43 = new javax.swing.JLabel();
      label44 = new javax.swing.JLabel();
      redCarLabel1 = new javax.swing.JLabel();
      label45 = new javax.swing.JLabel();
      playLabel1 = new javax.swing.JLabel();
      label46 = new javax.swing.JLabel();
      label47 = new javax.swing.JLabel();
      label48 = new javax.swing.JLabel();
      label49 = new javax.swing.JLabel();
      label50 = new javax.swing.JLabel();
      objectiveLabel1 = new javax.swing.JLabel();
      label51 = new javax.swing.JLabel();
      savedGamesLabel1 = new javax.swing.JLabel();
      label52 = new javax.swing.JLabel();
      label53 = new javax.swing.JLabel();
      label54 = new javax.swing.JLabel();
      label55 = new javax.swing.JLabel();
      label56 = new javax.swing.JLabel();
      label57 = new javax.swing.JLabel();
      cheatingLabel1 = new javax.swing.JLabel();
      label58 = new javax.swing.JLabel();
      label59 = new javax.swing.JLabel();
      label60 = new javax.swing.JLabel();
      label61 = new javax.swing.JLabel();
      addVehiclesLabel1 = new javax.swing.JLabel();
      label62 = new javax.swing.JLabel();
      label63 = new javax.swing.JLabel();
      removeVehiclesLabel1 = new javax.swing.JLabel();
      label64 = new javax.swing.JLabel();
      label65 = new javax.swing.JLabel();
      label66 = new javax.swing.JLabel();
      bottomLabel1 = new javax.swing.JLabel();
      simplicityLabelOne1 = new javax.swing.JLabel();
      simplicityLabelTwo1 = new javax.swing.JLabel();
      simplicityLabelThree1 = new javax.swing.JLabel();
      revertingLabel1 = new javax.swing.JLabel();
      label67 = new javax.swing.JLabel();
      label68 = new javax.swing.JLabel();
      label69 = new javax.swing.JLabel();
      label70 = new javax.swing.JLabel();
      label71 = new javax.swing.JLabel();
      draggingLabel1 = new javax.swing.JLabel();
      label72 = new javax.swing.JLabel();
      label73 = new javax.swing.JLabel();
      label74 = new javax.swing.JLabel();
      label75 = new javax.swing.JLabel();
      label76 = new javax.swing.JLabel();
      label77 = new javax.swing.JLabel();
      label78 = new javax.swing.JLabel();
      label79 = new javax.swing.JLabel();
      label80 = new javax.swing.JLabel();
      label81 = new javax.swing.JLabel();
      label82 = new javax.swing.JLabel();
      fileChooser = new javax.swing.JFileChooser();
      aboutDialog = new javax.swing.JDialog();
      closeAboutButton = new javax.swing.JButton();
      aboutTitleLabel = new javax.swing.JLabel();
      aboutSubTitleLabel = new javax.swing.JLabel();
      aboutDialogSeparator = new javax.swing.JSeparator();
      designedByLabel = new javax.swing.JLabel();
      programmedByLabel = new javax.swing.JLabel();
      myNameLabel = new javax.swing.JLabel();
      vehicleDesignsLabel = new javax.swing.JLabel();
      gabeLabel = new javax.swing.JLabel();
      websiteTitleLabel = new javax.swing.JLabel();
      websiteLabel = new javax.swing.JLabel();
      levelsByLabel = new javax.swing.JLabel();
      ourNamesLabel = new javax.swing.JLabel();
      dedicatedToLabel = new javax.swing.JLabel();
      drGLabel = new javax.swing.JLabel();
      menuBar = new javax.swing.JMenuBar();
      fileMenu = new javax.swing.JMenu();
      newMenuItem = new javax.swing.JMenuItem();
      fileSeparator1 = new javax.swing.JSeparator();
      loadMenuItem = new javax.swing.JMenuItem();
      saveMenuItem = new javax.swing.JMenuItem();
      fileSeparator2 = new javax.swing.JSeparator();
      quitMenuItem = new javax.swing.JMenuItem();
      helpMenu = new javax.swing.JMenu();
      helpMenuItem = new javax.swing.JMenuItem();
      helpSeparator = new javax.swing.JSeparator();
      aboutMenuItem = new javax.swing.JMenuItem();

      helpDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
      helpDialog.setTitle("Rush Hour Help");
      helpDialog.setAlwaysOnTop(true);
      helpDialog.setName("helpDialog"); // NOI18N
      helpDialog.setResizable(false);
      helpDialog.addWindowListener(new java.awt.event.WindowAdapter()
      {
         public void windowClosed(java.awt.event.WindowEvent evt)
         {
            helpDialogWindowClosed(evt);
         }
      });

      titleLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
      titleLabel.setText("Help! You Know I Need Someone");

      closeHelpButton.setText("Okay, I'm Good");
      closeHelpButton.setToolTipText("We're not going to have anymore problems, are we?");
      closeHelpButton.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            closeHelpButtonActionPerformed(evt);
         }
      });

      subTitleLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
      subTitleLabel.setText("Simple steps to playing Rush Hour");

      helpScrollingPanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
      helpScrollingPanel.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

      label42.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label42.setText("on the game to place the vehicle. Note that cars take");

      label43.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label43.setText("Truck\" to begin vehicle placement, and click a square");

      label44.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label44.setText("Click \"Add Car\" to begin placement of the");

      redCarLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
      redCarLabel1.setText("Red Car:");

      label45.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label45.setText("board, and two vehicles cannot overlap.");

      playLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
      playLabel1.setText("Play!:");

      label46.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label46.setText("up two squares and trucks take up three. Vehicles");

      label47.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label47.setText("selecting \"Save Game\" from the file menu (only");

      label48.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label48.setText("cannot be placed where they are partially off the game");

      label49.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label49.setText("can be tough work, you can save your game by");

      label50.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label50.setText("button to have Rush Hour walk you through the");

      objectiveLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
      objectiveLabel1.setText("Objective: Get the red car to the exit arrow");

      label51.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label51.setText("Since placing and moving vehicles");

      savedGamesLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
      savedGamesLabel1.setText("Saved Games:");

      label52.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label52.setText("Once vehicles are placed, click the \"Play!\"");

      label53.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label53.setText("button to begin the game. Drag the cars until you are");

      label54.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label54.setText("click the \"Cheat\" (available after presssing \"Solve\")");

      label55.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label55.setText("board can be solved. If you absolutely cannot go on,");

      label56.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label56.setText("and Rush Hour will verify that the current game");

      label57.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label57.setText("To accept defeat, you can click \"Solve\"");

      cheatingLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
      cheatingLabel1.setText("Cheating");

      label58.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label58.setText("click \"Remove Vehicle,\" and click on the vehicle");

      label59.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label59.setText("To remove unwanted vehicles,");

      label60.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label60.setText("able to move the red car over the exit arrow.");

      label61.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label61.setText("red car, then click in the third row to place the red car.");

      addVehiclesLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
      addVehiclesLabel1.setText("Add Vehicles:");

      label62.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label62.setText("To add subsequent vehicles, select");

      label63.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label63.setText("both a color and an orientation from the two");

      removeVehiclesLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
      removeVehiclesLabel1.setText("Removing Vehicles");

      label64.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label64.setText("drop-down menus. Then, click \"Add Car\" or \"Add");

      label65.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label65.setText("available in the offline version). Later, you can");

      label66.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label66.setText("come back and click \"Load Game\" to restore it to");

      bottomLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
      bottomLabel1.setText("Now, go play the game already!");

      simplicityLabelOne1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
      simplicityLabelOne1.setText("Simplicity: You may load pre-created games");

      simplicityLabelTwo1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
      simplicityLabelTwo1.setText("(you know, like, levels) if you don't want to spend");

      simplicityLabelThree1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
      simplicityLabelThree1.setText("the time creating your own levels");

      revertingLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
      revertingLabel1.setText("Reverting:");

      label67.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label67.setText("Once a game has been solved, the");

      label68.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label68.setText("\"Revert\" button appears. Press this button to go");

      label69.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label69.setText("back to one of two possible states: the starting state");

      label70.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label70.setText("or the last solve state. The starting state is set upon");

      label71.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label71.setText("loading a game or pressing the \"Play!\" button.");

      draggingLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
      draggingLabel1.setText("Dragging:");

      label72.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label72.setText("To position vehicles in the desired location");

      label73.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label73.setText("prior to game play, simply click-and-drag on any");

      label74.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label74.setText("vehicle and drag it in the horizontal or vertical");

      label75.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label75.setText("direction that it is facing.");

      label76.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label76.setText("you wish to remove.");

      label77.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label77.setText("Once you have entered Play! mode, you are unable");

      label78.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label78.setText("to directly edit the game board again. If you wish to");

      label79.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label79.setText("make a change to the game board, click the \"Edit\"");

      label80.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label80.setText("button which is now available.");

      label81.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label81.setText("solution.");

      label82.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
      label82.setText("its exact state!");

      javax.swing.GroupLayout helpScrollPanelLayout = new javax.swing.GroupLayout(helpScrollPanel);
      helpScrollPanel.setLayout(helpScrollPanelLayout);
      helpScrollPanelLayout.setHorizontalGroup(
         helpScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(helpScrollPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(helpScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(objectiveLabel1)
               .addComponent(simplicityLabelOne1)
               .addComponent(simplicityLabelTwo1)
               .addComponent(simplicityLabelThree1)
               .addGroup(helpScrollPanelLayout.createSequentialGroup()
                  .addComponent(redCarLabel1)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(label44))
               .addComponent(label61)
               .addGroup(helpScrollPanelLayout.createSequentialGroup()
                  .addComponent(addVehiclesLabel1)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(label62))
               .addComponent(label63)
               .addComponent(label64)
               .addComponent(label43)
               .addComponent(label42)
               .addComponent(label46)
               .addComponent(label48)
               .addComponent(label45)
               .addComponent(label73)
               .addComponent(label74)
               .addComponent(label75)
               .addGroup(helpScrollPanelLayout.createSequentialGroup()
                  .addComponent(removeVehiclesLabel1)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(label59))
               .addComponent(label58)
               .addComponent(label76)
               .addGroup(helpScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, helpScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(helpScrollPanelLayout.createSequentialGroup()
                        .addComponent(playLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label52))
                     .addComponent(label53))
                  .addComponent(label60))
               .addComponent(label77)
               .addComponent(label78)
               .addComponent(label79)
               .addComponent(label80)
               .addGroup(helpScrollPanelLayout.createSequentialGroup()
                  .addComponent(cheatingLabel1)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(label57))
               .addComponent(label56)
               .addComponent(label54)
               .addComponent(label50)
               .addComponent(label81)
               .addGroup(helpScrollPanelLayout.createSequentialGroup()
                  .addComponent(revertingLabel1)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(label67))
               .addComponent(label68)
               .addComponent(label69)
               .addComponent(label70)
               .addComponent(label71)
               .addGroup(helpScrollPanelLayout.createSequentialGroup()
                  .addComponent(savedGamesLabel1)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(label51))
               .addComponent(label49)
               .addComponent(label65)
               .addComponent(label66)
               .addComponent(label47)
               .addGroup(helpScrollPanelLayout.createSequentialGroup()
                  .addComponent(draggingLabel1)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(label72))
               .addComponent(label82)
               .addGroup(helpScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                  .addComponent(bottomLabel1)
                  .addComponent(label55)))
            .addContainerGap(263, Short.MAX_VALUE))
      );
      helpScrollPanelLayout.setVerticalGroup(
         helpScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(helpScrollPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(objectiveLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(simplicityLabelOne1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(simplicityLabelTwo1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(simplicityLabelThree1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(helpScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(redCarLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(label44))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label61)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(helpScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(addVehiclesLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(label62))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label63)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label64)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label43)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label42)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label46)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label48)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label45)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(helpScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(draggingLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(label72))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label73)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label74)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label75)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(helpScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(label59)
               .addComponent(removeVehiclesLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label58)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label76)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(helpScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(label52)
               .addComponent(playLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label53)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label60)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label77)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label78)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label79)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label80)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(helpScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(cheatingLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(label57))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label56)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label55)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label54)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label50)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label81)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(helpScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(revertingLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(label67))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label68)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label69)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label70)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label71)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(helpScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(savedGamesLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(label51))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label49)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label47)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label65)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label66)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(label82)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bottomLabel1)
            .addContainerGap())
      );

      helpScrollingPanel.setViewportView(helpScrollPanel);

      javax.swing.GroupLayout helpDialogLayout = new javax.swing.GroupLayout(helpDialog.getContentPane());
      helpDialog.getContentPane().setLayout(helpDialogLayout);
      helpDialogLayout.setHorizontalGroup(
         helpDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(helpDialogLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(helpDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
               .addComponent(titleLabel)
               .addComponent(helpScrollingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
               .addComponent(helpDialogSeparator))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, helpDialogLayout.createSequentialGroup()
            .addContainerGap(176, Short.MAX_VALUE)
            .addComponent(closeHelpButton)
            .addContainerGap())
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, helpDialogLayout.createSequentialGroup()
            .addContainerGap(105, Short.MAX_VALUE)
            .addComponent(subTitleLabel)
            .addContainerGap())
      );
      helpDialogLayout.setVerticalGroup(
         helpDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(helpDialogLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(subTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(helpDialogSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(helpScrollingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(closeHelpButton)
            .addContainerGap())
      );

      fileChooser.setFileFilter(new ExtensionFileFilter("Rush Hour Game Files (.ldf, .rsh, .dat)", new String[] {"LDF", "RSH", "DAT"}));

      aboutDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
      aboutDialog.setTitle("About Rush Hour");
      aboutDialog.setAlwaysOnTop(true);
      aboutDialog.setName("aboutDialog"); // NOI18N
      aboutDialog.addWindowListener(new java.awt.event.WindowAdapter()
      {
         public void windowClosed(java.awt.event.WindowEvent evt)
         {
            aboutDialogWindowClosed(evt);
         }
      });

      closeAboutButton.setText("Thanks for the Info");
      closeAboutButton.setToolTipText("You're welcome");
      closeAboutButton.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            closeAboutButtonActionPerformed(evt);
         }
      });

      aboutTitleLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
      aboutTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      aboutTitleLabel.setText("About Rush Hour");

      aboutSubTitleLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
      aboutSubTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      aboutSubTitleLabel.setText("Version: 0.2");

      designedByLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
      designedByLabel.setText("Designed, developed, and");

      programmedByLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
      programmedByLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      programmedByLabel.setText("programmed by:");

      myNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      myNameLabel.setText("Alex Laird");

      vehicleDesignsLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
      vehicleDesignsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      vehicleDesignsLabel.setText("Vehicle designs by:");

      gabeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      gabeLabel.setText("Gabriel Pyle");

      websiteTitleLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
      websiteTitleLabel.setText("Website:");

      websiteLabel.setText("www.alexlaird.name");

      levelsByLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
      levelsByLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      levelsByLabel.setText("Level designs by:");

      ourNamesLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      ourNamesLabel.setText("Andrew and Alex Laird");

      dedicatedToLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
      dedicatedToLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      dedicatedToLabel.setText("Dedicated to:");

      drGLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      drGLabel.setText("Dr. Gallagher");

      javax.swing.GroupLayout aboutDialogLayout = new javax.swing.GroupLayout(aboutDialog.getContentPane());
      aboutDialog.getContentPane().setLayout(aboutDialogLayout);
      aboutDialogLayout.setHorizontalGroup(
         aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(aboutDialogLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(aboutDialogLayout.createSequentialGroup()
                  .addComponent(websiteTitleLabel)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(websiteLabel))
               .addComponent(designedByLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(aboutDialogSeparator)
               .addComponent(programmedByLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(myNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(levelsByLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(ourNamesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(vehicleDesignsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(gabeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(dedicatedToLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(drGLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(closeAboutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(aboutSubTitleLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(aboutTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
      );
      aboutDialogLayout.setVerticalGroup(
         aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(aboutDialogLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(aboutTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(aboutSubTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(aboutDialogSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
               .addComponent(websiteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(websiteTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(designedByLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(programmedByLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(myNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(levelsByLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(ourNamesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(vehicleDesignsLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(gabeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(dedicatedToLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(drGLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(closeAboutButton)
            .addContainerGap())
      );

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
      setTitle("Rush Hour");
      setIconImage(new ImageIcon(getClass().getResource("/images/rushhour.icns")).getImage());
      setName("mainFrame"); // NOI18N
      setResizable(false);
      getContentPane().setLayout(new java.awt.GridLayout(1, 1));

      fileMenu.setText("File");

      newMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
      newMenuItem.setText("New Game");
      newMenuItem.setToolTipText("Reset the current game and start fresh");
      newMenuItem.setEnabled(false);
      newMenuItem.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            newMenuItemActionPerformed(evt);
         }
      });
      fileMenu.add(newMenuItem);
      fileMenu.add(fileSeparator1);

      loadMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
      loadMenuItem.setText("Load Game");
      loadMenuItem.setToolTipText("Load an old game file");
      loadMenuItem.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            loadMenuItemActionPerformed(evt);
         }
      });
      fileMenu.add(loadMenuItem);

      saveMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
      saveMenuItem.setText("Save Game");
      saveMenuItem.setToolTipText("Save the current game to a file");
      saveMenuItem.setEnabled(false);
      saveMenuItem.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            saveMenuItemActionPerformed(evt);
         }
      });
      fileMenu.add(saveMenuItem);
      fileMenu.add(fileSeparator2);

      quitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
      quitMenuItem.setText("Quit Rush Hour");
      quitMenuItem.setToolTipText("Too boring?  Click here");
      quitMenuItem.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            quitMenuItemActionPerformed(evt);
         }
      });
      fileMenu.add(quitMenuItem);

      menuBar.add(fileMenu);

      helpMenu.setText("Help!");

      helpMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
      helpMenuItem.setText("I Need Somebody!");
      helpMenuItem.setToolTipText("When I was younger, so much younger than today");
      helpMenuItem.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            helpMenuItemActionPerformed(evt);
         }
      });
      helpMenu.add(helpMenuItem);
      helpMenu.add(helpSeparator);

      aboutMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
      aboutMenuItem.setText("About ...");
      aboutMenuItem.setToolTipText("Learn the boring details of Rush Hour");
      aboutMenuItem.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            aboutMenuItemActionPerformed(evt);
         }
      });
      helpMenu.add(aboutMenuItem);

      menuBar.add(helpMenu);

      setJMenuBar(menuBar);

      pack();
   }// </editor-fold>//GEN-END:initComponents

    /**
     * The event that occurs when the New Game menu item is selected. This
     * resets the game board to its initial state. If changes have been made,
     * the user is prompted.
     *
     * @param evt The newMenuItem event.
     */
    private void newMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMenuItemActionPerformed
        framePanel.statusTextField.setText("Resetting the game board ...");
        int response = JOptionPane.showOptionDialog(this,
                "Are you sure you want to reset the game board?",
                "Reset Game Board", JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE, null,
                new Object[] {"Risk it", "Nope"}, null);
        // reset the game board
        if(response == JOptionPane.YES_OPTION)
        {
            framePanel.defaultStates();
            framePanel.resetGameBoard();
        }
        else
        {
            framePanel.statusTextField.setText(framePanel.DEFAULT_STATUS);
        }
}//GEN-LAST:event_newMenuItemActionPerformed

    /**
     * The event that occurs when the Load Game menu item is selected. This will
     * launch a dialog to allow the user to select a game to load. If changes
     * have been made to the current game board, the user is prompted before
     * loading (since loading will overwrite the current game board).
     * <p>
     * After loading a game, the application is put into the Play! state, so
     * all buttons except Edit and Solve are disabled and the user is allowed
     * to drag any vehicle.
     * <p>
     * The default file type for a Rush Hour game is .rsh, but other readable
     * types are .ldf and .dat.
     *
     * @param evt The loadMenuItem event.
     */
    private void loadMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadMenuItemActionPerformed
        framePanel.statusTextField.setText("Loading a game board ...");

        fileChooser.setDialogType(JFileChooser.OPEN_DIALOG);
        fileChooser.setDialogTitle("Load Game Board");
        fileChooser.setCurrentDirectory(new File(CURRENT_DIRECTORY));
        int response = fileChooser.showOpenDialog(this);
        if(response == JFileChooser.APPROVE_OPTION)
        {
            // warn the user if changes have been made to the current game board
            if(!isReset && !framePanel.gameBoard.isSolved())
            {
                response = JOptionPane.showOptionDialog(this, "Changes have " +
                        "been made to current game board. These will be\n" +
                        "lost if you continue. Are you sure you want to load " +
                        "a new game?", "Overwrite Current Game",
                        JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE,
                        null, new Object[] {"Yup, do it", "No, bad idea!"},
                        null);
                if(response == JOptionPane.NO_OPTION)
                {
                    framePanel.statusTextField.setText(
                            framePanel.DEFAULT_STATUS);
                    return;
                }
            }
            framePanel.defaultStates();

            framePanel.revertButtonTexts();
            framePanel.resetGameBoard();
            framePanel.resetButton.setText("Edit");
            framePanel.resetButton.setToolTipText("Stop solving and return " +
                    "to game board setup");

            framePanel.statusTextField.setText("Loading the game " +
                    "board ...");
            framePanel.addCarButton.setEnabled(false);
            framePanel.addTruckButton.setEnabled(false);
            framePanel.removeVehicleButton.setEnabled(false);
            framePanel.resetButton.setEnabled(false);
            framePanel.solveButton.setEnabled(false);
            framePanel.colorComboBox.setEnabled(false);
            framePanel.orientationComboBox.setEnabled(false);
            framePanel.waitForLoad = true;
            Runnable load = new Runnable()
            {
                @Override
                public void run()
                {
                    try
                    {
                        // load the game into the game board object
                        RushHourDomain.loadGame(fileChooser.getSelectedFile(),
                                framePanel.gameBoard);
                        // initliaize interface for game board
                        for(int i = 0; i <
                                framePanel.gameBoard.getNumVehicles(); ++i)
                        {
                            RushHourVehicle vehicle = framePanel.gameBoard.
                                    getVehicleAtIndex(i);
                            // position and add the car to the GUI
                            Point point = RushHourDomain.unsimplifyPoint(
                                    new Point(vehicle.getVehicleX(),
                                    vehicle.getVehicleY()),
                                    framePanel.boardPanel.getWidth(),
                                    framePanel.gameBoard.boardWidth,
                                    framePanel.boardPanel.getHeight(),
                                    framePanel.gameBoard.boardHeight);
                            framePanel.boardPanel.add(vehicle);
                            vehicle.setLocation(point);
                            framePanel.boardPanel.repaint();
                            framePanel.boardPanel.goMove(vehicle, point);
                            // remove color from combo box
                            framePanel.colorComboBox.removeItem(
                                    vehicle.getColor());
                        }
                        // update GUI
                        framePanel.colorComboBox.setSelectedIndex(1);
                        framePanel.orientationComboBox.setSelectedIndex(1);
                        framePanel.colorComboBox.setEnabled(false);
                        framePanel.orientationComboBox.setEnabled(false);
                        framePanel.addCarButton.setEnabled(false);
                        framePanel.addTruckButton.setEnabled(false);
                        framePanel.removeVehicleButton.setEnabled(false);
                        framePanel.resetButton.setText("Edit");
                        framePanel.resetButton.setToolTipText("Stop solving " +
                                "and return to game board setup");
                        framePanel.solveButton.setText("Solve");
                        framePanel.solveButton.setToolTipText("Generate " +
                                "(but do not yet show) the optimal " +
                                "solution from the current board");
                        framePanel.resetButton.setEnabled(true);
                        framePanel.solveButton.setEnabled(true);
                        newMenuItem.setEnabled(true);
                        saveMenuItem.setEnabled(true);
                        framePanel.statusTextField.setText(fileChooser.
                                getSelectedFile().getName().substring(0,
                                fileChooser.getSelectedFile().getName().
                                lastIndexOf(".")) +
                                " has been loaded. Drag vehicles to play!");
                        framePanel.startUnsolved = framePanel.gameBoard.
                                getBoardFromHash(framePanel.gameBoard.
                                getHash());
                        framePanel.lastUnsolved = null;
                        framePanel.userSolving = true;
                    }
                    catch(FileNotFoundException e)
                    {
                        framePanel.statusTextField.setText("The file was " +
                                "not found.");
                    }
                    catch(IOException e)
                    {
                        framePanel.statusTextField.setText("An unknown error " +
                                "occured while loading the game.");
                    }
                    catch(RushHourException e) {}
                    catch(NumberFormatException e) {}
                    framePanel.waitForLoad = false;
                }
            };
            new Thread(load).start();
        }
        else
        {
            framePanel.statusTextField.setText(framePanel.DEFAULT_STATUS);
        }
}//GEN-LAST:event_loadMenuItemActionPerformed

    /**
     * The event that occurs when the Save Game menu item is selected. This will
     * launch a dialog to allow the user to specify a location to save the
     * state of the current game board to. This file can then be loaded again
     * at any time.
     * <p>
     * By default, the .rsh extension is appended to a saved game, but other
     * valid types are .ldf and .dat.
     *
     * @param evt The saveMenuItem event.
     */
    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        framePanel.statusTextField.setText("Saving the game board ...");

        // launch the file chooser
        fileChooser.setDialogType(JFileChooser.SAVE_DIALOG);
        fileChooser.setDialogTitle("Save Game Board");
        if(!SAVE_DIRECTORY.exists())
        {
            SAVE_DIRECTORY.mkdir();
        }
        fileChooser.setCurrentDirectory(SAVE_DIRECTORY);
        int response = fileChooser.showSaveDialog(this);
        if(response == JFileChooser.APPROVE_OPTION)
        {
            framePanel.defaultStates();
            String name = fileChooser.getSelectedFile().getName();
            // append extension if none given
            if(name.indexOf(".") == -1)
            {
                name = name + ".rsh";
            }
            File file = new File(fileChooser.getCurrentDirectory() +
                    "/" + name);

            // the specified file is not a rush hour game type file
            if(!(new ExtensionFileFilter("Rush Hour Game Files (.ldf, .rsh, " +
                    ".dat)", new String[] {"LDF", "RSH", "DAT"}).accept(file)))
            {
                response = JOptionPane.showOptionDialog(this, "Rush Hour " +
                        "game files should have the extension .ldf, .rsh, or " +
                        ".dat.\nAre you sure you wish to continue with the " +
                        "extension " + name.substring(name.indexOf(".")) + "?" +
                        "\nThe file will not be able to be read by Rush Hour.",
                        "Invalid Extension", JOptionPane.YES_NO_OPTION,
                        JOptionPane.WARNING_MESSAGE, null,
                        new Object[] {"I guess so ...", "No way!"}, null);
                if(response == JOptionPane.NO_OPTION)
                {
                    framePanel.statusTextField.setText(
                            framePanel.DEFAULT_STATUS);
                    return;
                }
            }
            String word = "saved";
            // the specified file already exists, check for overwrite
            if(file.exists())
            {
                response = JOptionPane.showOptionDialog(this, name +
                        " already exists. Overwrite?",
                        "Overwrite Existing File", JOptionPane.YES_NO_OPTION,
                        JOptionPane.WARNING_MESSAGE, null,
                        new Object[] {"Yup, do it", "No, thanks"}, null);
                if(response == JOptionPane.NO_OPTION)
                {
                    framePanel.statusTextField.setText(
                            framePanel.DEFAULT_STATUS);
                    return;
                }
                word = "overwritten";
            }
            try
            {
                RushHourDomain.saveGame(file, framePanel.gameBoard);
                isReset = true;
                framePanel.statusTextField.setText(name + " has been " + word +
                        ".");
            }
            catch(IOException e)
            {
                framePanel.statusTextField.setText("An unknown error occured " +
                        "while saving the file.");
            }
        }
        else
        {
            framePanel.statusTextField.setText(framePanel.DEFAULT_STATUS);
        }
}//GEN-LAST:event_saveMenuItemActionPerformed

    /**
     * The event that occurs when the Quit menu item is pressed. This destroys
     * the frame and terminates the application.
     *
     * @param evt The quitMenuItem event.
     */
    private void quitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitMenuItemActionPerformed
        // terminate the application
        dispose();
        System.exit(0);
}//GEN-LAST:event_quitMenuItemActionPerformed

    /**
     * The event that occurs when the Help menu item is selected. This launches
     * a dialog to show the helpful hints for playing the game.
     *
     * @param evt The helpMenuItem event.
     */
    private void helpMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpMenuItemActionPerformed
        framePanel.statusTextField.setText("Help! Not just anybody ...");

        helpDialog.setLocation(getX() + 50, getY() + 50);
        helpDialog.setVisible(true);
}//GEN-LAST:event_helpMenuItemActionPerformed

    /**
     * The event that occurs when the About menu item is pressed. This launches
     * a dialog to show the user information regarding the game and its
     * creation.
     *
     * @param evt The aboutMenuItem event.
     */
    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        framePanel.statusTextField.setText("You really care about this stuff?");

        aboutDialog.setLocation(getX() + 100, getY() + 100);
        aboutDialog.setVisible(true);
}//GEN-LAST:event_aboutMenuItemActionPerformed

    /**
     * The event that occurs when the Close button on the Help Dialog is
     * pressed. This destroys the Help Dialog and returns the focus to the
     * main frame.
     *
     * @param evt The closeButton event.
     */
    private void closeHelpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeHelpButtonActionPerformed
        helpDialog.dispose();
        destroyDialog();
}//GEN-LAST:event_closeHelpButtonActionPerformed

    /**
     * The window event that occurs when the Help dialog closes. This destroys
     * the Help Dialog and returns the focus to the main frame.
     *
     * @param evt The helpDialogWindowClosed event.
     */
    private void helpDialogWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_helpDialogWindowClosed
        destroyDialog();
}//GEN-LAST:event_helpDialogWindowClosed

    /**
     * The window event that occurs when the About dialog closes. This destroys
     * the About Dialog and returns the focus to the main frame.
     *
     * @param evt The aboutDialogWindowClose event.
     */
    private void aboutDialogWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_aboutDialogWindowClosed
        destroyDialog();
}//GEN-LAST:event_aboutDialogWindowClosed

    /**
     * The event that occurs when the Close About Dialog button is pressed.
     * This destroys the About Dialog and returns the focus to the main frame.
     *
     * @param evt The closeAboutButton event.
     */
    private void closeAboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeAboutButtonActionPerformed
        aboutDialog.dispose();
        destroyDialog();
}//GEN-LAST:event_closeAboutButtonActionPerformed

    /**
     * Set components after the Help or About dialog have been closed. Return
     * the focus to the main frame.
     */
    private void destroyDialog()
    {
        // return focus to the mainFram
        setVisible(true);
        
        // return focus back to main frame
        if(framePanel.gameBoard.getNumVehicles() == 0)
        {
            framePanel.statusTextField.setText("Load a game, or click \"Add " +
                    "Car\" to build your own.");
        }
        else
        {
            framePanel.statusTextField.setText(framePanel.DEFAULT_STATUS);
        }
    }

    /**
     * The method responsible for constructing the visual frame and maintaining
     * the thread as long as the frame is open.
     *
     * @param args The command-line arguments.
     */
    public static void main(String args[])
    {
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new RushHourFrame().setVisible(true);
            }
        });
    }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JDialog aboutDialog;
   private javax.swing.JSeparator aboutDialogSeparator;
   private javax.swing.JMenuItem aboutMenuItem;
   private javax.swing.JLabel aboutSubTitleLabel;
   private javax.swing.JLabel aboutTitleLabel;
   private javax.swing.JLabel addVehiclesLabel1;
   private javax.swing.JLabel bottomLabel1;
   private javax.swing.JLabel cheatingLabel1;
   private javax.swing.JButton closeAboutButton;
   private javax.swing.JButton closeHelpButton;
   private javax.swing.JLabel dedicatedToLabel;
   private javax.swing.JLabel designedByLabel;
   private javax.swing.JLabel drGLabel;
   private javax.swing.JLabel draggingLabel1;
   private javax.swing.JFileChooser fileChooser;
   private javax.swing.JMenu fileMenu;
   private javax.swing.JSeparator fileSeparator1;
   private javax.swing.JSeparator fileSeparator2;
   private javax.swing.JLabel gabeLabel;
   private javax.swing.JDialog helpDialog;
   private javax.swing.JSeparator helpDialogSeparator;
   private javax.swing.JMenu helpMenu;
   private javax.swing.JMenuItem helpMenuItem;
   private javax.swing.JPanel helpScrollPanel;
   private javax.swing.JScrollPane helpScrollingPanel;
   private javax.swing.JSeparator helpSeparator;
   private javax.swing.JLabel label42;
   private javax.swing.JLabel label43;
   private javax.swing.JLabel label44;
   private javax.swing.JLabel label45;
   private javax.swing.JLabel label46;
   private javax.swing.JLabel label47;
   private javax.swing.JLabel label48;
   private javax.swing.JLabel label49;
   private javax.swing.JLabel label50;
   private javax.swing.JLabel label51;
   private javax.swing.JLabel label52;
   private javax.swing.JLabel label53;
   private javax.swing.JLabel label54;
   private javax.swing.JLabel label55;
   private javax.swing.JLabel label56;
   private javax.swing.JLabel label57;
   private javax.swing.JLabel label58;
   private javax.swing.JLabel label59;
   private javax.swing.JLabel label60;
   private javax.swing.JLabel label61;
   private javax.swing.JLabel label62;
   private javax.swing.JLabel label63;
   private javax.swing.JLabel label64;
   private javax.swing.JLabel label65;
   private javax.swing.JLabel label66;
   private javax.swing.JLabel label67;
   private javax.swing.JLabel label68;
   private javax.swing.JLabel label69;
   private javax.swing.JLabel label70;
   private javax.swing.JLabel label71;
   private javax.swing.JLabel label72;
   private javax.swing.JLabel label73;
   private javax.swing.JLabel label74;
   private javax.swing.JLabel label75;
   private javax.swing.JLabel label76;
   private javax.swing.JLabel label77;
   private javax.swing.JLabel label78;
   private javax.swing.JLabel label79;
   private javax.swing.JLabel label80;
   private javax.swing.JLabel label81;
   private javax.swing.JLabel label82;
   private javax.swing.JLabel levelsByLabel;
   protected javax.swing.JMenuItem loadMenuItem;
   private javax.swing.JMenuBar menuBar;
   private javax.swing.JLabel myNameLabel;
   protected javax.swing.JMenuItem newMenuItem;
   private javax.swing.JLabel objectiveLabel1;
   private javax.swing.JLabel ourNamesLabel;
   private javax.swing.JLabel playLabel1;
   private javax.swing.JLabel programmedByLabel;
   private javax.swing.JMenuItem quitMenuItem;
   private javax.swing.JLabel redCarLabel1;
   private javax.swing.JLabel removeVehiclesLabel1;
   private javax.swing.JLabel revertingLabel1;
   protected javax.swing.JMenuItem saveMenuItem;
   private javax.swing.JLabel savedGamesLabel1;
   private javax.swing.JLabel simplicityLabelOne1;
   private javax.swing.JLabel simplicityLabelThree1;
   private javax.swing.JLabel simplicityLabelTwo1;
   private javax.swing.JLabel subTitleLabel;
   private javax.swing.JLabel titleLabel;
   private javax.swing.JLabel vehicleDesignsLabel;
   private javax.swing.JLabel websiteLabel;
   private javax.swing.JLabel websiteTitleLabel;
   // End of variables declaration//GEN-END:variables

}
